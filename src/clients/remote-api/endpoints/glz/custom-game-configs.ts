/* THIS IS AN AUTOGENERATED FILE - DO NOT EDIT */

import { z } from "zod";
import axios, { type AxiosResponse } from "axios";
import { type AxiosRequestConfig } from "axios";
import { customGameConfigsEndpoint } from "@tqman/valorant-api-types";
import { parseResponseDataFor } from "~/helpers/endpoints";
import { ensureArray } from "~/utils/array";
import { type CustomAxiosRequestConfig } from "~/clients/common/types";
import { type RemoteApiClient } from "~/clients/remote-api";

export interface CustomGameConfigsRequestConfig
  extends AxiosRequestConfig,
    CustomAxiosRequestConfig {}

export type CustomGameConfigsResponse = z.input<
  (typeof customGameConfigsEndpoint.responses)["200"]
>;

export type CustomGameConfigsParsedResponse = z.output<
  (typeof customGameConfigsEndpoint.responses)["200"]
>;

export class CustomGameConfigsRemoteApiEndpoint {
  /**
   * @description Get information about the available gamemodes, maps, queues, and gamepods
   */
  getCustomGameConfigs<T = CustomGameConfigsParsedResponse>(
    this: RemoteApiClient,
    config: CustomGameConfigsRequestConfig & { parseResponseData: true },
  ): Promise<AxiosResponse<T>>;
  getCustomGameConfigs<T = CustomGameConfigsResponse>(
    this: RemoteApiClient,
    config?: CustomGameConfigsRequestConfig,
  ): Promise<AxiosResponse<T>>;
  getCustomGameConfigs<T = CustomGameConfigsResponse>(
    this: RemoteApiClient,
    config: CustomGameConfigsRequestConfig = {},
  ) {
    const shouldParseResponse =
      config.parseResponseData ?? this.options.parseResponseData;

    return this.axiosInstance<T>({
      method: "GET",
      baseURL: this.getServerUrl(customGameConfigsEndpoint.type),
      url: customGameConfigsEndpoint.suffix,
      ...config,
      transformRequest: [
        parseResponseDataFor(customGameConfigsEndpoint),
        ...ensureArray(axios.defaults.transformRequest),
      ],
      ...(shouldParseResponse
        ? {
            transformResponse: [
              ...ensureArray(axios.defaults.transformResponse),
              parseResponseDataFor(
                customGameConfigsEndpoint,
                config.customResponseParser,
              ),
            ],
          }
        : {}),
    });
  }
}
