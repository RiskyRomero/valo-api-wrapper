/* THIS IS AN AUTOGENERATED FILE - DO NOT EDIT */

import { z } from "zod";
import axios from "axios";
import { currentGameMatchEndpoint } from "valorant-api-types";
import { parseResponseDataFor, buildSuffix } from "~/helpers/endpoints";
import { ensureArray } from "~/utils/array";
import { AxiosRequestConfigWithData } from "~/utils/lib/axios";
import { type CustomAxiosRequestConfig } from "~/clients/common/types";
import { type RemoteApiClient } from "~/clients/remote-api";

type CurrentGameMatchSuffixData = { currentGameMatchId: string };

export interface CurrentGameMatchRequestConfig
  extends AxiosRequestConfigWithData<CurrentGameMatchSuffixData>,
    CustomAxiosRequestConfig {}

export type CurrentGameMatchResponse = z.infer<
  (typeof currentGameMatchEndpoint.responses)["200"]
>;

export class CurrentGameMatchRemoteApiEndpoint {
  /**
   * @description Get the current game match info
   */
  getCurrentGameMatch<T = CurrentGameMatchResponse>(
    this: RemoteApiClient,
    config: CurrentGameMatchRequestConfig,
  ) {
    const shouldParseResponse =
      config.parseResponseData ?? this.options.parseResponseData;

    return this.axiosInstance<T>({
      method: "GET",
      baseURL: this.getServerUrl(currentGameMatchEndpoint.type),
      url: buildSuffix(currentGameMatchEndpoint.suffix, config.data),
      ...config,
      transformRequest: [
        parseResponseDataFor(currentGameMatchEndpoint),
        ...ensureArray(axios.defaults.transformRequest),
      ],
      ...(shouldParseResponse
        ? {
            transformResponse: [
              ...ensureArray(axios.defaults.transformResponse),
              parseResponseDataFor(
                currentGameMatchEndpoint,
                config.customResponseParser,
              ),
            ],
          }
        : {}),
    });
  }
}
