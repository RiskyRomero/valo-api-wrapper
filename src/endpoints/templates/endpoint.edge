/* THIS IS AN AUTOGENERATED FILE - DO NOT EDIT */

import type { AxiosResponse } from "axios";
import type { z } from "zod";

import type { {{pascalCase(CLIENT_TYPE)}}ApiClient } from "~/clients/{{CLIENT_TYPE}}";
import Endpoint from "~/endpoints/{{CLIENT_TYPE}}/{{ENDPOINT_IMPORT}}";
import type { 
  ResolveData,
  ResolveParams,
  ResolveValue,
  ValorantAxiosRequestConfig
} from "~/endpoints/types";

type Params = ResolveParams<(typeof Endpoint)["~type"]["url"]>;
type Body = z.infer<ResolveValue<(typeof Endpoint)["~type"], "body">>;
type Data = ResolveData<Params, Body>;
type Response = z.infer<
  ResolveValue<(typeof Endpoint)["~type"], "responses">["{{EXPECTED_STATUS}}"]
>;

export interface {{ENDPOINT_NAME}}RequestConfig
  extends ValorantAxiosRequestConfig<Data> {}

export class {{ENDPOINT_NAME}}Endpoint {
  /**
   * {{{ENDPOINT_DESCRIPTION.split("\n").join("\n   * ")}}}
   *
   * @EndpointType {{ENDPOINT_TYPE}}
   */
  {{ENDPOINT_METHOD}}{{ENDPOINT_NAME}}<T = Response>(
    this: {{pascalCase(CLIENT_TYPE)}}ApiClient,
    @if(ENDPOINT_REQUIRES_CONFIG)
    config: {{ENDPOINT_NAME}}RequestConfig,
    @else
    config: {{ENDPOINT_NAME}}RequestConfig = {},
    @end
  ): Promise<AxiosResponse<T>> {
    return this["~request"](Endpoint, config);
  }
}

